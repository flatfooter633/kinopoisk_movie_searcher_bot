import os
from dotenv import load_dotenv, find_dotenv

LOW_BUDGET = "100-50000"
HIGH_BUDGET = "9000000-9999999999"

HI_ARRAY = {'hi', 'hello', 'good', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥–æ—Ä–æ–≤', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', 'menu', 'start', '–º–µ–Ω—é', '—Å—Ç–∞—Ä—Ç'}

HOW_ARE_YOU_ANSWER = [
    "–ß–µ–º –¥–∞–ª—å—à–µ, —Ç–µ–º —Å—Ç—Ä–∞—à–Ω–µ–µ.",
    "–°–ø–∞—Å–∏–±–æ, –¥–µ–ª–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ.",
    "–ë—å–µ—Ç –∫–ª—é—á–æ–º, –¥–∞ –≤—Å—ë –ø–æ –≥–æ–ª–æ–≤–µ.",
    "–ö–∞–∫ –Ω–∞ –º–∞—Ä—Å–µ. –ü–æ—á–µ–º—É? ‚Äì –ù–∏–∫–∞–∫–æ–π –∂–∏–∑–Ω–∏.",
    "–ù–µ –∑–Ω–∞—é‚Ä¶",
    "–ö–∞–∫ –Ω–∞ –±–∞—Ö—á–µ. –ê—Ä–±—É–∑ —Ä–∞—Å—Ç–µ—Ç, –∞ –∫–æ–Ω—á–∏–∫ —Å–æ—Ö–Ω–µ—Ç.",
    "–ï—â–µ –Ω–µ —Ä–æ–¥–∏–ª–∞‚Ä¶",
    "–í—ã –æ–±–æ–∑–Ω–∞–ª–∏—Å—å‚Ä¶ —ç—Ç–æ –Ω–µ —è.",
    "–î–µ–ª–∞ –∏–¥—É—Ç —Ö–æ—Ä–æ—à–æ, –Ω–æ –º–∏–º–æ.",
    "–ö–∞–∫ —É –∑–µ–±—Ä—ã: –±–µ–ª–∞—è –ø–æ–ª–æ—Å–∫–∞, —á–µ—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞.",
    "–ù–µ –∑–Ω–∞—é, –ø—Ä–æ–∫—É—Ä–æ—Ä –∑–∞–±–æ–ª–µ–ª",
    "–ê —Ç–µ–±–µ –∑–∞—á–µ–º? =)",
    "–ú–æ–π –ø—Å–∏—Ö–∏–∞—Ç—Ä –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª –º–Ω–µ –Ω–µ –æ–±—Å—É–∂–¥–∞—Ç—å —ç—Ç–æ —Å –º–∞–ª–æ–∑–Ω–∞–∫–æ–º—ã–º–∏ –ª—é–¥—å–º–∏.",
    "–ï—Å–ª–∏ –µ—Å—Ç—å –≤ –∫–∞—Ä–º–∞–Ω–µ –ø–∞—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç, –∑–Ω–∞—á–∏—Ç –≤—Å–µ –Ω–µ —Ç–∞–∫ —É–∂ –ø–ª–æ—Ö–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.",
    "–î–µ–ª–∞ –∫–∞–∫ —É —Ç–µ–±—è, —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ.",
    "–•–µ—Ä–æ—à–æ!",
    "–ï—â–µ –Ω–µ –∑–∞–≤–µ–ª–∏, –Ω–æ –≤ –Ω–∞—à–µ–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ –≤—Å–µ –º–æ–∂–µ—Ç –±—ã—Ç—å.",
    "–ï—Å–ª–∏ –±—ã–ª–æ –±—ã –µ—â–µ –ª—É—á—à–µ, —Ç–æ —ç—Ç–æ –±—ã–ª–æ –±—ã –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ.",
]

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞.env
# –ï—Å–ª–∏ —Ñ–∞–π–ª–∞.env –Ω–µ—Ç, —Ç–æ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ.
if not find_dotenv():
    exit("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ç.–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª .env")
else:
    load_dotenv()

# –¢–æ–∫–µ–Ω API –∫–∏–Ω–æ–ø–æ–∏—Å–∫–∞
API_KEY = os.getenv("API_KEY")
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ @BotFather –≤ Telegram
TOKEN = os.getenv("TOKEN")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ REDIS
REDIS_HOST = os.getenv("REDIS_HOST", "redis")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ –∏–∑ docker-compose
REDIS_PORT = int(os.getenv("REDIS_PORT", 6379))
REDIS_PASSWORD = os.getenv("REDIS_PASSWORD")

# ['announced', 'completed', 'filming', 'post-production', 'pre-production']
# ['animated-series', 'anime', 'cartoon', 'movie', 'tv-series']


# –°–ø–∏—Å–æ–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤
STICKERS = {
    "search": "CAACAgIAAxkBAAEHUMhmqOKVqjDJvavilI7sqxYEv0LYoQAC2RgAAnUWUEmUQAHVSkl_pzUE",
    "selection": "CAACAgIAAxkBAAEHUflmqQXECFTmYlOfAzeGry7KTJaFEAAC7hQAAuNVUEk4S4qtAhNhvDUE",
    "start": "CAACAgIAAxkBAAEHUd9mqQNOmo_aKPi1L52HbA-wdA7bKwAChxUAAj0PUEnem2b91sejvzUE",
    "error": "CAACAgIAAxkBAAEHYexmq-NPtIxB3COd6MNqjSZ-qUNsiQACyxQAAt2wUUlMYGw0MqQdYTUE",
    "why": "CAACAgIAAxkBAAEHYf9mq-SRYC-9CPpAOlh9pBGdYjKbZQAC6BgAAoCaGElH6JHLA5DZuTUE",
    "go": "CAACAgIAAxkBAAEHY71mrHOgBsgHiJTw5H0wMONhYLR4xgACfQADQbVWDMI7otqy4CWANQQ",
    "wow": "CAACAgIAAxkBAAEHY7tmrHObSNWJeYy4Ohp-ftnA_5Ch_QACawADQbVWDPrzm0b7fXuVNQQ",
    "boom": "CAACAgIAAxkBAAEHY7lmrHOSkKMKQBVibnqfY-kccJmWvgACagADQbVWDKyZ8RxfRvjjNQQ",
    "hello": "CAACAgIAAxkBAAEHY7dmrHOQHKwqkOfB52nJ7HDWbXx1XQACbgADQbVWDNClhHLm3FqINQQ",
    "ok": "CAACAgIAAxkBAAEHY7VmrHOCeovwmvyG9is1iQS3dMRHIgACcQADQbVWDFigEETauxe_NQQ",
    "oops": "CAACAgIAAxkBAAEHY79mrHO3hfdWj31Q8XgXG3AZ21rpOAACcgADQbVWDBovm1aDtrOwNQQ",
    "ouch": "CAACAgIAAxkBAAEHY8FmrHPBsRLIsjXlZ9ONRleFj3bhqQACeAADQbVWDNm6y3pBU7OPNQQ",
    "not_found": "CAACAgIAAxkBAAEHYhFmq-lGpy-1TY35mzeKW3RfzWrKygACYhgAAjx6UEnKFDnPOcbwvzUE",
    "done": "CAACAgIAAxkBAAEHYg1mq-gTcmNmnf5UqU56BowsNqBBCwAC_RkAAmzaUUlkoYIx4TqiCjUE",
    "stop": "CAACAgIAAxkBAAEHYfBmq-OsOkNojsClk9oEF0Ddb_8BPgACChUAAl_zwUl2NIzsRPf4fzUE",
    "help": "CAACAgIAAxkBAAEHUeFmqQRvZTB8vv7jYCFzZxcIdrXOxQACwxMAAm3oEEqGY8B94dy6NDUE",
}
# –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω
COUNTRIES_LIST = [
    "–ê–≤—Å—Ç—Ä–∞–ª–∏—è",
    "–ê–≤—Å—Ç—Ä–∏—è",
    "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞",
    "–ë–µ–ª—å–≥–∏—è",
    "–ë—Ä–∞–∑–∏–ª–∏—è",
    "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è",
    "–ì–µ—Ä–º–∞–Ω–∏—è",
    "–ì–µ—Ä–º–∞–Ω–∏—è (–ì–î–†)",
    "–ì–µ—Ä–º–∞–Ω–∏—è (–§–†–ì)",
    "–ì—Ä–µ—Ü–∏—è",
    "–ì—Ä—É–∑–∏—è",
    "–î–∞–Ω–∏—è",
    "–î–∂–∏–±—É—Ç–∏",
    "–ò–∑—Ä–∞–∏–ª—å",
    "–ò–Ω–¥–∏—è",
    "–ò—Ä–ª–∞–Ω–¥–∏—è",
    "–ò—Å–ª–∞–Ω–¥–∏—è",
    "–ò—Å–ø–∞–Ω–∏—è",
    "–ò—Ç–∞–ª–∏—è",
    "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω",
    "–ö–∞–Ω–∞–¥–∞",
    "–ö–∏—Ç–∞–π",
    "–ö–æ—Ä–µ—è",
    "–ö–æ—Ä–µ—è –°–µ–≤–µ—Ä–Ω–∞—è",
    "–ö–æ—Ä–µ—è –Æ–∂–Ω–∞—è",
    "–ö—É–±–∞",
    "–õ–∞—Ç–≤–∏—è",
    "–õ–∏—Ç–≤–∞",
    "–ú–µ–∫—Å–∏–∫–∞",
    "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã",
    "–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è",
    "–ù–æ–≤–∞—è –ö–∞–ª–µ–¥–æ–Ω–∏—è",
    "–ù–æ—Ä–≤–µ–≥–∏—è",
    "–ü–æ–ª—å—à–∞",
    "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è",
    "–†–æ—Å—Å–∏–π—Å–∫–∞—è –∏–º–ø–µ—Ä–∏—è",
    "–†–æ—Å—Å–∏—è",
    "–†—É–º—ã–Ω–∏—è",
    "–°–°–°–†",
    "–°–®–ê",
    "–°–µ—Ä–±–∏—è",
    "–°–µ—Ä–±–∏—è –∏ –ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è",
    "–°–ª–æ–≤–∞–∫–∏—è",
    "–°–ª–æ–≤–µ–Ω–∏—è",
    "–¢—É—Ä—Ü–∏—è",
    "–£–∫—Ä–∞–∏–Ω–∞",
    "–§–∏–Ω–ª—è–Ω–¥–∏—è",
    "–§—Ä–∞–Ω—Ü–∏—è",
    "–ß–µ—Ö–∏—è",
    "–ß–µ—Ö–æ—Å–ª–æ–≤–∞–∫–∏—è",
    "–ß–∏–ª–∏",
    "–®–≤–µ–π—Ü–∞—Ä–∏—è",
    "–®–≤–µ—Ü–∏—è",
    "–Æ–ê–†",
    "–Ø–ø–æ–Ω–∏—è",
]
# –°–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤
GENRE_LIST = [
    "–∞–Ω–∏–º–µ",
    "–±–∏–æ–≥—Ä–∞—Ñ–∏—è",
    "–±–æ–µ–≤–∏–∫",
    "–≤–µ—Å—Ç–µ—Ä–Ω",
    "–≤–æ–µ–Ω–Ω—ã–π",
    "–¥–µ—Ç–µ–∫—Ç–∏–≤",
    "–¥–µ—Ç—Å–∫–∏–π",
    "–¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö",
    "–¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π",
    "–¥—Ä–∞–º–∞",
    "–∏–≥—Ä–∞",
    "–∏—Å—Ç–æ—Ä–∏—è",
    "–∫–æ–º–µ–¥–∏—è",
    "–∫–æ–Ω—Ü–µ—Ä—Ç",
    "–∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∞",
    "–∫—Ä–∏–º–∏–Ω–∞–ª",
    "–º–µ–ª–æ–¥—Ä–∞–º–∞",
    "–º—É–∑—ã–∫–∞",
    "–º—É–ª—å—Ç—Ñ–∏–ª—å–º",
    "–º—é–∑–∏–∫–ª",
    "–Ω–æ–≤–æ—Å—Ç–∏",
    "–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è",
    "—Ä–µ–∞–ª—å–Ω–æ–µ –¢–í",
    "—Å–µ–º–µ–π–Ω—ã–π",
    "—Å–ø–æ—Ä—Ç",
    "—Ç–æ–∫-—à–æ—É",
    "—Ç—Ä–∏–ª–ª–µ—Ä",
    "—É–∂–∞—Å—ã",
    "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞",
    "—Ñ–∏–ª—å–º-–Ω—É–∞—Ä",
    "—Ñ—ç–Ω—Ç–µ–∑–∏",
    "—Ü–µ—Ä–µ–º–æ–Ω–∏—è",
]

# –ë–∞–∑–æ–≤—ã–π –ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞
SEARCH_BY_NAME_QUERY = {
    "url": "https://api.kinopoisk.dev/v1.4/movie/search",
    "query_params": {
        "page": 1,
        "limit": 10,
    },
    "headers": {
        "accept": "application/json",
        "X-API-KEY": API_KEY,
    },
}


# –ë–∞–∑–æ–≤—ã–π –ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –ø–æ –∂–∞–Ω—Ä—É –∏ —Å—Ç—Ä–∞–Ω–µ
BASE_SEARCH_QUERY = {
    "url": "https://api.kinopoisk.dev/v1.4/movie",
    "query_params": {
        "page": 1,
        "limit": 15,
        "sortField": "votes.imdb",
        "sortType": -1,
        "selectFields": [
            "id",
            "name",
            "alternativeName",
            "budget",
            # "fees",
            "description",
            "rating",
            "year",
            "type",
            # "facts",
            "genres",
            "ageRating",
            "countries",
            "poster",
            # "similarMovies",
            # "sequelsAndPrequels",
            # "persons",
        ],
        "notNullFields": [
            "id",
            "name",
            "alternativeName",
            "description",
            "year",
            "rating.kp",
            "ageRating",
            "budget.value",
            "budget.currency",
            "genres.name",
            "countries.name",
            "poster.url",
            # "persons.id",
            # "persons.name",
            # "persons.description",
            # "persons.profession",
            # "facts.type",
            # "facts.value",
            # "facts.spoiler",
            # "similarMovies.id",
            # "similarMovies.name",
            # "similarMovies.alternativeName",
            # "similarMovies.year",
            # "sequelsAndPrequels.id",
            # "sequelsAndPrequels.name",
        ],
        "type": ["animated-series", "anime", "cartoon", "movie", "tv-series"],
        # "budget.value": "1000 - 9000000",
    },
    "headers": {
        "accept": "application/json",
        "X-API-KEY": API_KEY,
    },
}
# –¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏ –±–æ—Ç–∞
HELP_TEXT = (
    f"–°–ø—Ä–∞–≤–∫–∞ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º –∏ —Ñ—É–Ω–∫—Ü–∏—è–º –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.\n"
    f"\n–ö–æ–º–∞–Ω–¥—ã:\n"
    f"  ‚òëÔ∏è/start - –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é\n"
    f"  üìñ/history - –∏—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤\n"
    f"\n–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞:\n"
    f"  üé•/movie_search - –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
    f"  üé¨/movie_by_param - –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n"
    f"  üí©/low_budget_movie - —Å –Ω–∏–∑–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º\n"
    f"  üí∞/high_budget_movie - —Å –≤—ã—Å–æ–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º\n"
)

START_TEXT = (
    f"\n‚òëÔ∏è–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É\n<b>üëâüèº[–ü–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º]üëàüèº</b>\n–º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å "
    f"–º–Ω–µ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\nüé≠–∂–∞–Ω—Ä,\nüçø–≥–æ–¥,\nüåü—Ä–µ–π—Ç–∏–Ω–≥\n–∏ —è –ø–æ–¥–±–µ—Ä—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–∏–ª—å–º—ã.\n"
    f"\n‚òëÔ∏è–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É\n<b>üëâüèº[–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é]üëàüèº</b>\n–≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ —è –µ–≥–æ –Ω–∞–π–¥—É.\n"
    f"\nü´µüèº–ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É: "
)
GREETING_VARIANTS = [
    "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã!",
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∫–∏–Ω–æ! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∏–ª—å–º.",
    "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π üéû—Ñ–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.",
    "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã.",
    "–Ø —Ä–∞–¥ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –≤—ã–±–æ—Ä–æ–º —Ñ–∏–ª—å–º–∞!",
    "–Ø —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Ç–≤–æ–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã!",
    "–Ø —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Ç–≤–æ–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã!",
]


# üìÜüìÖü™£‚öîÔ∏è‚õìüè∫‚ö∞Ô∏èüõíüéÅ‚è∞‚è±üï∞‚è≥üß≠üéõüì∫‚òéÔ∏èüí°üïØüßØ‚öñÔ∏èü™ìüéÉü´µüèºüëàüèºüëâüèºü´∑üèºü´∏üèº ü§°üí©üëªü§ñüëΩü§†ü§°üí©üëªü§ñüëΩü•∑üèªüßõüèª‚Äç‚ôÇÔ∏èüßúüèº‚Äç‚ôÄÔ∏èüßû‚Äç‚ôÇÔ∏èüßûüßöüèª‚Äç‚ôÇÔ∏èüåçüåüüçøüç≠üçºüé≠üé¨üé•üìΩüéûüí∞üõ†‚öôÔ∏èüí≥üí£üìñüí§üîöüîôüîõüîùüîú‚úîÔ∏è‚òëÔ∏èüîò¬©Ô∏è¬ÆÔ∏è‚Ñ¢Ô∏èüéµüé∂‚ûï‚ûñüü∞‚úñÔ∏è‚ûóüá∫üá∏üá∑üá∫
def return_film_info(input_card) -> str:
    try:
        budget = input_card.get("budget").get("value")
        currency = input_card.get("budget").get("currency")
    except AttributeError:
        budget_string = ""
    else:
        budget_string = f"\nüí≥–ë—é–¥–∂–µ—Ç: <b>{budget:,} {currency}</b>"

    try:
        search_date = input_card.search_date
    except AttributeError:
        text = (
            f'\nüé•–ù–∞–∑–≤–∞–Ω–∏–µ:\n<b><a href="{input_card.get("poster").get("url")}">{input_card.get("name")}</a></b>\n'
            f'\nüé¨–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:\n<u>{input_card.get("alternativeName")}</u>\n'
            f'\nüçø–ì–æ–¥: <b>{input_card.get("year")}</b>'
            f"{budget_string}"
            f'\nüçº–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥: <b>{input_card.get("ageRating")}+</b>'
            f'\nüåü–†–µ–π—Ç–∏–Ω–≥ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞: <b>{round(input_card.get("rating").get("kp"), 1)}</b>'
            f'\nüé≠–ñ–∞–Ω—Ä—ã: <b>{", ".join(genre.get("name") for genre in input_card.get("genres"))}</b>'
            f'\nüåç–°—Ç—Ä–∞–Ω—ã: <b>{", ".join(country.get("name") for country in input_card.get("countries"))}</b>\n'
            f'\nüìñ–û–ø–∏—Å–∞–Ω–∏–µ:\n<i>{input_card.get("description")}</i>'
        )
    else:
        text = (
            f"üìÜ–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞: <b>{search_date:%d.%m.%Y %H:%M}</b>\n"
            f'\nüé•–ù–∞–∑–≤–∞–Ω–∏–µ:\n<b><a href="{input_card.poster_url}">{input_card.movie_name}</a></b>\n'
            f"\nüçø–ì–æ–¥: <b>{input_card.year}</b>"
            f"\nüçº–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥: <b>{input_card.age_rating}+</b>"
            f"\nüåü–†–µ–π—Ç–∏–Ω–≥ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞: <b>{input_card.rating}</b>"
            f"\nüé≠–ñ–∞–Ω—Ä—ã: <b>{input_card.genre}</b>"
            f"\nüìñ–û–ø–∏—Å–∞–Ω–∏–µ:\n<i>{input_card.movie_description}</i>"
        )

    return text
